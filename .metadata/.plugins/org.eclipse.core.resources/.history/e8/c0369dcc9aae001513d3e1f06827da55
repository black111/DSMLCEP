	/*
 * 
 */
package dsml.diagram.navigator;

/**
 * @generated
 */
public class DsmlNavigatorLabelProvider extends org.eclipse.jface.viewers.LabelProvider implements org.eclipse.ui.navigator.ICommonLabelProvider, org.eclipse.jface.viewers.ITreePathLabelProvider {

		/**
 * @generated
 */
static {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().getImageRegistry().put("Navigator?UnknownElement", org.eclipse.jface.resource.ImageDescriptor.getMissingImageDescriptor());  //$NON-NLS-1$
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().getImageRegistry().put("Navigator?ImageNotFound", org.eclipse.jface.resource.ImageDescriptor.getMissingImageDescriptor());  //$NON-NLS-1$
}
	
		/**
 * @generated
 */
public void updateLabel(org.eclipse.jface.viewers.ViewerLabel label, org.eclipse.jface.viewers.TreePath elementPath) {
	Object element = elementPath.getLastSegment();
	if (element instanceof dsml.diagram.navigator.DsmlNavigatorItem && !isOwnView(((dsml.diagram.navigator.DsmlNavigatorItem) element).getView())) {
		return;
	}
	label.setText(getText(element));
	label.setImage(getImage(element));
}
	
		/**
 * @generated
 */
public org.eclipse.swt.graphics.Image getImage(Object element) {
	if (element instanceof dsml.diagram.navigator.DsmlNavigatorGroup) {
	dsml.diagram.navigator.DsmlNavigatorGroup group = (dsml.diagram.navigator.DsmlNavigatorGroup) element;
	return dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().getBundledImage(group.getIcon());
}

	if (element instanceof dsml.diagram.navigator.DsmlNavigatorItem) {
	dsml.diagram.navigator.DsmlNavigatorItem navigatorItem = (dsml.diagram.navigator.DsmlNavigatorItem) element;
	if (!isOwnView(navigatorItem.getView())) {
		return super.getImage(element);
	}
	return getImage(navigatorItem.getView());
}

	// Due to plugin.xml content will be called only for "own" views
if (element instanceof org.eclipse.core.runtime.IAdaptable) {
	org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) ((org.eclipse.core.runtime.IAdaptable) element).getAdapter(org.eclipse.gmf.runtime.notation.View.class);
	if (view != null && isOwnView(view)) {
		return getImage(view);
	}
}

		return super.getImage(element);
}
	
		/**
 * @generated
 */
public org.eclipse.swt.graphics.Image getImage(org.eclipse.gmf.runtime.notation.View view) {
		switch (dsml.diagram.part.DsmlVisualIDRegistry.getVisualID(view)) {
		case dsml.diagram.edit.parts.AreaDesenhoEditPart.VISUAL_ID:
	return getImage("Navigator?Diagram?dsml?AreaDesenho", dsml.diagram.providers.DsmlElementTypes.AreaDesenho_1000); //$NON-NLS-1$
case dsml.diagram.edit.parts.EventEditPart.VISUAL_ID:
	return getImage("Navigator?TopLevelNode?dsml?Event", dsml.diagram.providers.DsmlElementTypes.Event_2001); //$NON-NLS-1$
case dsml.diagram.edit.parts.RuleEditPart.VISUAL_ID:
	return getImage("Navigator?TopLevelNode?dsml?Rule", dsml.diagram.providers.DsmlElementTypes.Rule_2002); //$NON-NLS-1$
case dsml.diagram.edit.parts.EventPatternEditPart.VISUAL_ID:
	return getImage("Navigator?TopLevelNode?dsml?EventPattern", dsml.diagram.providers.DsmlElementTypes.EventPattern_2003); //$NON-NLS-1$
case dsml.diagram.edit.parts.WindowEditPart.VISUAL_ID:
	return getImage("Navigator?TopLevelNode?dsml?Window", dsml.diagram.providers.DsmlElementTypes.Window_2004); //$NON-NLS-1$
case dsml.diagram.edit.parts.AttributeEditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?Attribute", dsml.diagram.providers.DsmlElementTypes.Attribute_3001); //$NON-NLS-1$
case dsml.diagram.edit.parts.ConditionGroupEditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?ConditionGroup", dsml.diagram.providers.DsmlElementTypes.ConditionGroup_3002); //$NON-NLS-1$
case dsml.diagram.edit.parts.OperatorEditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?Operator", dsml.diagram.providers.DsmlElementTypes.Operator_3003); //$NON-NLS-1$
case dsml.diagram.edit.parts.ValueOperatorEditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?ValueOperator", dsml.diagram.providers.DsmlElementTypes.ValueOperator_3004); //$NON-NLS-1$
case dsml.diagram.edit.parts.TargetEditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?Target", dsml.diagram.providers.DsmlElementTypes.Target_3005); //$NON-NLS-1$
case dsml.diagram.edit.parts.Operator2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?Operator", dsml.diagram.providers.DsmlElementTypes.Operator_3006); //$NON-NLS-1$
case dsml.diagram.edit.parts.ValueOperator2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?ValueOperator", dsml.diagram.providers.DsmlElementTypes.ValueOperator_3007); //$NON-NLS-1$
case dsml.diagram.edit.parts.AggregationEditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?Aggregation", dsml.diagram.providers.DsmlElementTypes.Aggregation_3008); //$NON-NLS-1$
case dsml.diagram.edit.parts.OrderEditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?Order", dsml.diagram.providers.DsmlElementTypes.Order_3009); //$NON-NLS-1$
case dsml.diagram.edit.parts.LimitEditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?Limit", dsml.diagram.providers.DsmlElementTypes.Limit_3010); //$NON-NLS-1$
case dsml.diagram.edit.parts.Operator3EditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?Operator", dsml.diagram.providers.DsmlElementTypes.Operator_3011); //$NON-NLS-1$
case dsml.diagram.edit.parts.ValueOperator3EditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?ValueOperator", dsml.diagram.providers.DsmlElementTypes.ValueOperator_3012); //$NON-NLS-1$
case dsml.diagram.edit.parts.UnaryOperatorPatternEditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?UnaryOperatorPattern", dsml.diagram.providers.DsmlElementTypes.UnaryOperatorPattern_3013); //$NON-NLS-1$
case dsml.diagram.edit.parts.BinaryOperatorPatternEditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?BinaryOperatorPattern", dsml.diagram.providers.DsmlElementTypes.BinaryOperatorPattern_3014); //$NON-NLS-1$
case dsml.diagram.edit.parts.PatternTimerEditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?PatternTimer", dsml.diagram.providers.DsmlElementTypes.PatternTimer_3015); //$NON-NLS-1$
case dsml.diagram.edit.parts.Attribute2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?Attribute", dsml.diagram.providers.DsmlElementTypes.Attribute_3016); //$NON-NLS-1$
case dsml.diagram.edit.parts.NotEditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?Not", dsml.diagram.providers.DsmlElementTypes.Not_3017); //$NON-NLS-1$
case dsml.diagram.edit.parts.ConditionGroup2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?ConditionGroup", dsml.diagram.providers.DsmlElementTypes.ConditionGroup_3018); //$NON-NLS-1$
case dsml.diagram.edit.parts.Target2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?Target", dsml.diagram.providers.DsmlElementTypes.Target_3019); //$NON-NLS-1$
case dsml.diagram.edit.parts.Aggregation2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?Aggregation", dsml.diagram.providers.DsmlElementTypes.Aggregation_3020); //$NON-NLS-1$
case dsml.diagram.edit.parts.Order2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?Order", dsml.diagram.providers.DsmlElementTypes.Order_3021); //$NON-NLS-1$
case dsml.diagram.edit.parts.Operator4EditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?Operator", dsml.diagram.providers.DsmlElementTypes.Operator_3022); //$NON-NLS-1$
case dsml.diagram.edit.parts.ValueOperator4EditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?ValueOperator", dsml.diagram.providers.DsmlElementTypes.ValueOperator_3023); //$NON-NLS-1$
case dsml.diagram.edit.parts.UnaryOperatorPattern2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?UnaryOperatorPattern", dsml.diagram.providers.DsmlElementTypes.UnaryOperatorPattern_3024); //$NON-NLS-1$
case dsml.diagram.edit.parts.BinaryOperatorPattern2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?BinaryOperatorPattern", dsml.diagram.providers.DsmlElementTypes.BinaryOperatorPattern_3025); //$NON-NLS-1$
case dsml.diagram.edit.parts.PatternTimer2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?PatternTimer", dsml.diagram.providers.DsmlElementTypes.PatternTimer_3026); //$NON-NLS-1$
case dsml.diagram.edit.parts.Attribute3EditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?Attribute", dsml.diagram.providers.DsmlElementTypes.Attribute_3027); //$NON-NLS-1$
case dsml.diagram.edit.parts.Not2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?dsml?Not", dsml.diagram.providers.DsmlElementTypes.Not_3028); //$NON-NLS-1$
case dsml.diagram.edit.parts.LinkComponentEditPart.VISUAL_ID:
	return getImage("Navigator?Link?dsml?LinkComponent", dsml.diagram.providers.DsmlElementTypes.LinkComponent_4001); //$NON-NLS-1$
case dsml.diagram.edit.parts.LinkTargetEditPart.VISUAL_ID:
	return getImage("Navigator?Link?dsml?LinkTarget", dsml.diagram.providers.DsmlElementTypes.LinkTarget_4002); //$NON-NLS-1$
case dsml.diagram.edit.parts.ComparisonEditPart.VISUAL_ID:
	return getImage("Navigator?Link?dsml?Comparison", dsml.diagram.providers.DsmlElementTypes.Comparison_4003); //$NON-NLS-1$
case dsml.diagram.edit.parts.ArithmeticEditPart.VISUAL_ID:
	return getImage("Navigator?Link?dsml?Arithmetic", dsml.diagram.providers.DsmlElementTypes.Arithmetic_4004); //$NON-NLS-1$
case dsml.diagram.edit.parts.FollowedbyEditPart.VISUAL_ID:
	return getImage("Navigator?Link?dsml?Followedby", dsml.diagram.providers.DsmlElementTypes.Followedby_4005); //$NON-NLS-1$
case dsml.diagram.edit.parts.LogicalConnectorEditPart.VISUAL_ID:
	return getImage("Navigator?Link?dsml?LogicalConnector", dsml.diagram.providers.DsmlElementTypes.LogicalConnector_4006); //$NON-NLS-1$
	}
		return getImage("Navigator?UnknownElement", null);  //$NON-NLS-1$
}
	
		/**
 * @generated
 */
private org.eclipse.swt.graphics.Image getImage(String key, org.eclipse.gmf.runtime.emf.type.core.IElementType elementType) {
	org.eclipse.jface.resource.ImageRegistry imageRegistry = dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().getImageRegistry();
	org.eclipse.swt.graphics.Image image = imageRegistry.get(key);
	if (image == null && elementType != null && dsml.diagram.providers.DsmlElementTypes.isKnownElementType(elementType)) {
		image = dsml.diagram.providers.DsmlElementTypes.getImage(elementType);
		imageRegistry.put(key, image);
	}
			
	if (image == null) {
		image = imageRegistry.get("Navigator?ImageNotFound");  //$NON-NLS-1$
		imageRegistry.put(key, image);
	}
	return image;
}
	
		/**
 * @generated
 */
public String getText(Object element) {
	if (element instanceof dsml.diagram.navigator.DsmlNavigatorGroup) {
	dsml.diagram.navigator.DsmlNavigatorGroup group = (dsml.diagram.navigator.DsmlNavigatorGroup) element;
	return group.getGroupName();
}

	if (element instanceof dsml.diagram.navigator.DsmlNavigatorItem) {
	dsml.diagram.navigator.DsmlNavigatorItem navigatorItem = (dsml.diagram.navigator.DsmlNavigatorItem) element;
   		if (!isOwnView(navigatorItem.getView())) {
   			return null;
   		}
   		return getText(navigatorItem.getView());
	}

	// Due to plugin.xml content will be called only for "own" views
if (element instanceof org.eclipse.core.runtime.IAdaptable) {
	org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) ((org.eclipse.core.runtime.IAdaptable) element).getAdapter(org.eclipse.gmf.runtime.notation.View.class);
	if (view != null && isOwnView(view)) {
		return getText(view);
	}
}

		return super.getText(element);
}
	
		/**
 * @generated
 */
public String getText(org.eclipse.gmf.runtime.notation.View view) {
	if (view.getElement() != null && view.getElement().eIsProxy()) {
		return getUnresolvedDomainElementProxyText(view);
	}
		switch (dsml.diagram.part.DsmlVisualIDRegistry.getVisualID(view)) {
		case dsml.diagram.edit.parts.AreaDesenhoEditPart.VISUAL_ID:
	return getAreaDesenho_1000Text(view);
case dsml.diagram.edit.parts.EventEditPart.VISUAL_ID:
	return getEvent_2001Text(view);
case dsml.diagram.edit.parts.RuleEditPart.VISUAL_ID:
	return getRule_2002Text(view);
case dsml.diagram.edit.parts.EventPatternEditPart.VISUAL_ID:
	return getEventPattern_2003Text(view);
case dsml.diagram.edit.parts.WindowEditPart.VISUAL_ID:
	return getWindow_2004Text(view);
case dsml.diagram.edit.parts.AttributeEditPart.VISUAL_ID:
	return getAttribute_3001Text(view);
case dsml.diagram.edit.parts.ConditionGroupEditPart.VISUAL_ID:
	return getConditionGroup_3002Text(view);
case dsml.diagram.edit.parts.OperatorEditPart.VISUAL_ID:
	return getOperator_3003Text(view);
case dsml.diagram.edit.parts.ValueOperatorEditPart.VISUAL_ID:
	return getValueOperator_3004Text(view);
case dsml.diagram.edit.parts.TargetEditPart.VISUAL_ID:
	return getTarget_3005Text(view);
case dsml.diagram.edit.parts.Operator2EditPart.VISUAL_ID:
	return getOperator_3006Text(view);
case dsml.diagram.edit.parts.ValueOperator2EditPart.VISUAL_ID:
	return getValueOperator_3007Text(view);
case dsml.diagram.edit.parts.AggregationEditPart.VISUAL_ID:
	return getAggregation_3008Text(view);
case dsml.diagram.edit.parts.OrderEditPart.VISUAL_ID:
	return getOrder_3009Text(view);
case dsml.diagram.edit.parts.LimitEditPart.VISUAL_ID:
	return getLimit_3010Text(view);
case dsml.diagram.edit.parts.Operator3EditPart.VISUAL_ID:
	return getOperator_3011Text(view);
case dsml.diagram.edit.parts.ValueOperator3EditPart.VISUAL_ID:
	return getValueOperator_3012Text(view);
case dsml.diagram.edit.parts.UnaryOperatorPatternEditPart.VISUAL_ID:
	return getUnaryOperatorPattern_3013Text(view);
case dsml.diagram.edit.parts.BinaryOperatorPatternEditPart.VISUAL_ID:
	return getBinaryOperatorPattern_3014Text(view);
case dsml.diagram.edit.parts.PatternTimerEditPart.VISUAL_ID:
	return getPatternTimer_3015Text(view);
case dsml.diagram.edit.parts.Attribute2EditPart.VISUAL_ID:
	return getAttribute_3016Text(view);
case dsml.diagram.edit.parts.NotEditPart.VISUAL_ID:
	return getNot_3017Text(view);
case dsml.diagram.edit.parts.ConditionGroup2EditPart.VISUAL_ID:
	return getConditionGroup_3018Text(view);
case dsml.diagram.edit.parts.Target2EditPart.VISUAL_ID:
	return getTarget_3019Text(view);
case dsml.diagram.edit.parts.Aggregation2EditPart.VISUAL_ID:
	return getAggregation_3020Text(view);
case dsml.diagram.edit.parts.Order2EditPart.VISUAL_ID:
	return getOrder_3021Text(view);
case dsml.diagram.edit.parts.Operator4EditPart.VISUAL_ID:
	return getOperator_3022Text(view);
case dsml.diagram.edit.parts.ValueOperator4EditPart.VISUAL_ID:
	return getValueOperator_3023Text(view);
case dsml.diagram.edit.parts.UnaryOperatorPattern2EditPart.VISUAL_ID:
	return getUnaryOperatorPattern_3024Text(view);
case dsml.diagram.edit.parts.BinaryOperatorPattern2EditPart.VISUAL_ID:
	return getBinaryOperatorPattern_3025Text(view);
case dsml.diagram.edit.parts.PatternTimer2EditPart.VISUAL_ID:
	return getPatternTimer_3026Text(view);
case dsml.diagram.edit.parts.Attribute3EditPart.VISUAL_ID:
	return getAttribute_3027Text(view);
case dsml.diagram.edit.parts.Not2EditPart.VISUAL_ID:
	return getNot_3028Text(view);
case dsml.diagram.edit.parts.LinkComponentEditPart.VISUAL_ID:
	return getLinkComponent_4001Text(view);
case dsml.diagram.edit.parts.LinkTargetEditPart.VISUAL_ID:
	return getLinkTarget_4002Text(view);
case dsml.diagram.edit.parts.ComparisonEditPart.VISUAL_ID:
	return getComparison_4003Text(view);
case dsml.diagram.edit.parts.ArithmeticEditPart.VISUAL_ID:
	return getArithmetic_4004Text(view);
case dsml.diagram.edit.parts.FollowedbyEditPart.VISUAL_ID:
	return getFollowedby_4005Text(view);
case dsml.diagram.edit.parts.LogicalConnectorEditPart.VISUAL_ID:
	return getLogicalConnector_4006Text(view);
	}
		return getUnknownElementText(view);
}
	
		/**
 * @generated
 */
private String getAreaDesenho_1000Text(org.eclipse.gmf.runtime.notation.View view) {
					return "";  //$NON-NLS-1$
	}
	/**
 * @generated
 */
private String getEvent_2001Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Event_2001, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.EventEventNameEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5002); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getRule_2002Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Rule_2002, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.RuleRuleNameEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5019); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getEventPattern_2003Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.EventPattern_2003, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.EventPatternEventPatternEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5031); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getWindow_2004Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Window_2004, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.WindowWindowEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5032); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getAttribute_3001Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Attribute_3001, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.AttributeNameTypeEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5001); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getConditionGroup_3002Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.ConditionGroup_3002, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.ConditionGroupConditionGroupEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5005); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getOperator_3003Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Operator_3003, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.OperatorOperatorEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5003); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getValueOperator_3004Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.ValueOperator_3004, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.ValueOperatorValueOperatorEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5004); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getTarget_3005Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Target_3005, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.TargetAliasEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5008); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getOperator_3006Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Operator_3006, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.OperatorOperator2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5006); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getValueOperator_3007Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.ValueOperator_3007, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.ValueOperatorValueOperator2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5007); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getAggregation_3008Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Aggregation_3008, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.AggregationTypeAggregationEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5009); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getOrder_3009Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Order_3009, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.OrderTypeOrderEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5011); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getLimit_3010Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Limit_3010, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.LimitValueLimitEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5010); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getOperator_3011Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Operator_3011, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.OperatorOperator3EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5012); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getValueOperator_3012Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.ValueOperator_3012, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.ValueOperatorValueOperator3EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5013); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getUnaryOperatorPattern_3013Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.UnaryOperatorPattern_3013, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.UnaryOperatorPatternNameEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5014); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getBinaryOperatorPattern_3014Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.BinaryOperatorPattern_3014, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.BinaryOperatorPatternNameEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5015); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getPatternTimer_3015Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.PatternTimer_3015, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.PatternTimerPatternTimerEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5016); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getAttribute_3016Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Attribute_3016, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.AttributeNameType2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5017); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getNot_3017Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Not_3017, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.NotDescriptionEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5018); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getConditionGroup_3018Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.ConditionGroup_3018, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.ConditionGroupConditionGroup2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5020); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getTarget_3019Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Target_3019, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.TargetAlias2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5021); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getAggregation_3020Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Aggregation_3020, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.AggregationTypeAggregation2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5022); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getOrder_3021Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Order_3021, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.OrderTypeOrder2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5023); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getOperator_3022Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Operator_3022, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.OperatorOperator4EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5024); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getValueOperator_3023Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.ValueOperator_3023, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.ValueOperatorValueOperator4EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5025); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getUnaryOperatorPattern_3024Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.UnaryOperatorPattern_3024, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.UnaryOperatorPatternName2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5026); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getBinaryOperatorPattern_3025Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.BinaryOperatorPattern_3025, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.BinaryOperatorPatternName2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5027); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getPatternTimer_3026Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.PatternTimer_3026, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.PatternTimerPatternTimer2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5028); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getAttribute_3027Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Attribute_3027, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.AttributeNameType3EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5029); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getNot_3028Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Not_3028, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.NotDescription2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5030); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getLinkComponent_4001Text(org.eclipse.gmf.runtime.notation.View view) {
								return "";  //$NON-NLS-1$
		}
	/**
 * @generated
 */
private String getLinkTarget_4002Text(org.eclipse.gmf.runtime.notation.View view) {
								return "";  //$NON-NLS-1$
		}
	/**
 * @generated
 */
private String getComparison_4003Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Comparison_4003, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.ComparisonComparisonEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 6001); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getArithmetic_4004Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.Arithmetic_4004, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.ArithmeticArithmeticEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 6002); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getFollowedby_4005Text(org.eclipse.gmf.runtime.notation.View view) {
								return "";  //$NON-NLS-1$
		}
	/**
 * @generated
 */
private String getLogicalConnector_4006Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = dsml.diagram.providers.DsmlParserProvider.getParser(dsml.diagram.providers.DsmlElementTypes.LogicalConnector_4006, view.getElement() != null ? view.getElement() : view, dsml.diagram.part.DsmlVisualIDRegistry.getType(dsml.diagram.edit.parts.LogicalConnectorTypeLogicalEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	dsml.diagram.part.DsmlDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 6003); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	
		/**
 * @generated
 */
private String getUnknownElementText(org.eclipse.gmf.runtime.notation.View view) {
	return "<UnknownElement Visual_ID = " + view.getType() + ">";  //$NON-NLS-1$  //$NON-NLS-2$
}
	
		/**
 * @generated
 */
private String getUnresolvedDomainElementProxyText(org.eclipse.gmf.runtime.notation.View view) {
	return "<Unresolved domain element Visual_ID = " + view.getType() + ">";  //$NON-NLS-1$  //$NON-NLS-2$
}
	
		/**
 * @generated
 */
public void init(org.eclipse.ui.navigator.ICommonContentExtensionSite aConfig) {
}

		/**
 * @generated
 */
public void restoreState(org.eclipse.ui.IMemento aMemento) {
}

		/**
 * @generated
 */
public void saveState(org.eclipse.ui.IMemento aMemento) {
}
	
		/**
 * @generated
 */
public String getDescription(Object anElement) {
	return null;
}
	
		/**
 * @generated
 */
private boolean isOwnView(org.eclipse.gmf.runtime.notation.View view) {
	return dsml.diagram.edit.parts.AreaDesenhoEditPart.MODEL_ID.equals(dsml.diagram.part.DsmlVisualIDRegistry.getModelID(view));
}

	}
