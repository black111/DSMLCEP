/*
 * 
 */
package prediqt.diagram.providers;

/**
 * @generated
 */
public class PrediqtParserProvider extends org.eclipse.gmf.runtime.common.core.service.AbstractProvider implements org.eclipse.gmf.runtime.common.ui.services.parser.IParserProvider {
	
	
	/**
 * @generated
 */
	private org.eclipse.gmf.runtime.common.ui.services.parser.IParser pNodeNameQcf_5001Parser;

	/**
 * @generated
 */
	private org.eclipse.gmf.runtime.common.ui.services.parser.IParser getPNodeNameQcf_5001Parser() {
		if (pNodeNameQcf_5001Parser == null) {
						org.eclipse.emf.ecore.EAttribute[] features = new org.eclipse.emf.ecore.EAttribute[] {
				prediqt.PrediqtPackage.eINSTANCE.getPNode_Name(), prediqt.PrediqtPackage.eINSTANCE.getPNode_Qcf()
			};
				prediqt.diagram.parsers.MessageFormatParser parser = new prediqt.diagram.parsers.MessageFormatParser(features);
					parser.setViewPattern("name={0} qcf={1}"); //$NON-NLS-1$
				parser.setEditorPattern("name={0} qcf={1}"); //$NON-NLS-1$
				parser.setEditPattern("name={0} qcf={1}"); //$NON-NLS-1$
				pNodeNameQcf_5001Parser = parser;
		}
		return pNodeNameQcf_5001Parser;
	}


	
	
	
	/**
 * @generated
 */
	private org.eclipse.gmf.runtime.common.ui.services.parser.IParser pArcImpact_6001Parser;

	/**
 * @generated
 */
	private org.eclipse.gmf.runtime.common.ui.services.parser.IParser getPArcImpact_6001Parser() {
		if (pArcImpact_6001Parser == null) {
						org.eclipse.emf.ecore.EAttribute[] features = new org.eclipse.emf.ecore.EAttribute[] {
				prediqt.PrediqtPackage.eINSTANCE.getPArc_Impact()
			};
				prediqt.diagram.parsers.MessageFormatParser parser = new prediqt.diagram.parsers.MessageFormatParser(features);
								pArcImpact_6001Parser = parser;
		}
		return pArcImpact_6001Parser;
	}



		/**
 * @generated
 */
	protected org.eclipse.gmf.runtime.common.ui.services.parser.IParser getParser(int visualID) {
		switch (visualID) {
				case prediqt.diagram.edit.parts.PNodeNameQcfEditPart.VISUAL_ID: return getPNodeNameQcf_5001Parser();
						case prediqt.diagram.edit.parts.PArcImpactEditPart.VISUAL_ID: return getPArcImpact_6001Parser();
		}
		return null;
	}
		/**
 * Utility method that consults ParserService
 * @generated
 */
	public static org.eclipse.gmf.runtime.common.ui.services.parser.IParser getParser(org.eclipse.gmf.runtime.emf.type.core.IElementType type, org.eclipse.emf.ecore.EObject object, String parserHint) {
		return org.eclipse.gmf.runtime.common.ui.services.parser.ParserService.getInstance().getParser(new HintAdapter(type, object, parserHint));
	}
		/**
 * @generated
 */
	public org.eclipse.gmf.runtime.common.ui.services.parser.IParser getParser(
			org.eclipse.core.runtime.IAdaptable hint) {
		String vid = (String) hint.getAdapter(String.class);
		if (vid != null) {
			return getParser(prediqt.diagram.part.PrediqtVisualIDRegistry.getVisualID(vid));
		}
		org.eclipse.gmf.runtime.notation.View view =
				(org.eclipse.gmf.runtime.notation.View) hint.getAdapter(org.eclipse.gmf.runtime.notation.View.class);
		if (view != null) {
			return getParser(prediqt.diagram.part.PrediqtVisualIDRegistry.getVisualID(view));
		}
		return null;
	}

		/**
 * @generated
 */
	public boolean provides(org.eclipse.gmf.runtime.common.core.service.IOperation operation) {
		if (operation instanceof org.eclipse.gmf.runtime.common.ui.services.parser.GetParserOperation) {
			org.eclipse.core.runtime.IAdaptable hint =
					((org.eclipse.gmf.runtime.common.ui.services.parser.GetParserOperation) operation).getHint();
			if (prediqt.diagram.providers.PrediqtElementTypes.getElement(hint) == null) {
				return false;
			}
			return getParser(hint) != null;
		}
		return false;
	}

		/**
 * @generated
 */
	private static class HintAdapter extends org.eclipse.gmf.runtime.emf.ui.services.parser.ParserHintAdapter {

		/**
 * @generated
 */
		private final org.eclipse.gmf.runtime.emf.type.core.IElementType elementType;

		/**
 * @generated
 */
		public HintAdapter(org.eclipse.gmf.runtime.emf.type.core.IElementType type,
				org.eclipse.emf.ecore.EObject object, String parserHint) {
			super(object, parserHint);
			assert type != null;
			elementType = type;
		}

		/**
 * @generated
 */
		public Object getAdapter(Class adapter) {
			if (org.eclipse.gmf.runtime.emf.type.core.IElementType.class.equals(adapter)) {
				return elementType;
			}
			return super.getAdapter(adapter);
		}
	}

	}
