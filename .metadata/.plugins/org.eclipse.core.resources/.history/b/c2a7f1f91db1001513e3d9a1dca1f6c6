/**
 */
package dsml.impl;

import dsml.DsmlPackage;
import dsml.GroupRelacional;
import dsml.LogicalConnector;
import dsml.TypeLogical;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.EObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Logical Connector</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link dsml.impl.LogicalConnectorImpl#getSource <em>Source</em>}</li>
 *   <li>{@link dsml.impl.LogicalConnectorImpl#getTarget <em>Target</em>}</li>
 *   <li>{@link dsml.impl.LogicalConnectorImpl#getTypeLogical <em>Type Logical</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class LogicalConnectorImpl extends LinkImpl implements LogicalConnector {
	/**
	 * The cached value of the '{@link #getSource() <em>Source</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getSource()
	 * @generated
	 * @ordered
	 */
	protected GroupRelacional source;

	/**
	 * The cached value of the '{@link #getTarget() <em>Target</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getTarget()
	 * @generated
	 * @ordered
	 */
	protected GroupRelacional target;

	/**
	 * The default value of the '{@link #getTypeLogical() <em>Type Logical</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getTypeLogical()
	 * @generated
	 * @ordered
	 */
	protected static final TypeLogical TYPE_LOGICAL_EDEFAULT = TypeLogical.AND;

	/**
	 * The cached value of the '{@link #getTypeLogical() <em>Type Logical</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getTypeLogical()
	 * @generated
	 * @ordered
	 */
	protected TypeLogical typeLogical = TYPE_LOGICAL_EDEFAULT;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LogicalConnectorImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return DsmlPackage.Literals.LOGICAL_CONNECTOR;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public GroupRelacional getSource() {
		if (source != null && source.eIsProxy()) {
			InternalEObject oldSource = (InternalEObject)source;
			source = (GroupRelacional)eResolveProxy(oldSource);
			if (source != oldSource) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, DsmlPackage.LOGICAL_CONNECTOR__SOURCE, oldSource, source));
			}
		}
		return source;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public GroupRelacional basicGetSource() {
		return source;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setSource(GroupRelacional newSource) {
		GroupRelacional oldSource = source;
		source = newSource;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, DsmlPackage.LOGICAL_CONNECTOR__SOURCE, oldSource, source));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public GroupRelacional getTarget() {
		if (target != null && target.eIsProxy()) {
			InternalEObject oldTarget = (InternalEObject)target;
			target = (GroupRelacional)eResolveProxy(oldTarget);
			if (target != oldTarget) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, DsmlPackage.LOGICAL_CONNECTOR__TARGET, oldTarget, target));
			}
		}
		return target;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public GroupRelacional basicGetTarget() {
		return target;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setTarget(GroupRelacional newTarget) {
		GroupRelacional oldTarget = target;
		target = newTarget;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, DsmlPackage.LOGICAL_CONNECTOR__TARGET, oldTarget, target));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public TypeLogical getTypeLogical() {
		return typeLogical;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setTypeLogical(TypeLogical newTypeLogical) {
		TypeLogical oldTypeLogical = typeLogical;
		typeLogical = newTypeLogical == null ? TYPE_LOGICAL_EDEFAULT : newTypeLogical;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, DsmlPackage.LOGICAL_CONNECTOR__TYPE_LOGICAL, oldTypeLogical, typeLogical));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case DsmlPackage.LOGICAL_CONNECTOR__SOURCE:
				if (resolve) return getSource();
				return basicGetSource();
			case DsmlPackage.LOGICAL_CONNECTOR__TARGET:
				if (resolve) return getTarget();
				return basicGetTarget();
			case DsmlPackage.LOGICAL_CONNECTOR__TYPE_LOGICAL:
				return getTypeLogical();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case DsmlPackage.LOGICAL_CONNECTOR__SOURCE:
				setSource((GroupRelacional)newValue);
				return;
			case DsmlPackage.LOGICAL_CONNECTOR__TARGET:
				setTarget((GroupRelacional)newValue);
				return;
			case DsmlPackage.LOGICAL_CONNECTOR__TYPE_LOGICAL:
				setTypeLogical((TypeLogical)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case DsmlPackage.LOGICAL_CONNECTOR__SOURCE:
				setSource((GroupRelacional)null);
				return;
			case DsmlPackage.LOGICAL_CONNECTOR__TARGET:
				setTarget((GroupRelacional)null);
				return;
			case DsmlPackage.LOGICAL_CONNECTOR__TYPE_LOGICAL:
				setTypeLogical(TYPE_LOGICAL_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case DsmlPackage.LOGICAL_CONNECTOR__SOURCE:
				return source != null;
			case DsmlPackage.LOGICAL_CONNECTOR__TARGET:
				return target != null;
			case DsmlPackage.LOGICAL_CONNECTOR__TYPE_LOGICAL:
				return typeLogical != TYPE_LOGICAL_EDEFAULT;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (typeLogical: ");
		result.append(typeLogical);
		result.append(')');
		return result.toString();
	}

} //LogicalConnectorImpl
