/**
 */
package dsml;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Condition Group</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@link dsml.ConditionGroup#getConditionGroup <em>Condition Group</em>}</li>
 *   <li>{@link dsml.ConditionGroup#getOperationTypes <em>Operation Types</em>}</li>
 *   <li>{@link dsml.ConditionGroup#getSource <em>Source</em>}</li>
 *   <li>{@link dsml.ConditionGroup#getTarget <em>Target</em>}</li>
 * </ul>
 * </p>
 *
 * @see dsml.DsmlPackage#getConditionGroup()
 * @model annotation="gmf.node label='conditionGroup' figure='rectangle'"
 *        annotation="gmf.label classname='ConditionGroupCustomLabeler' depends='source'"
 * @generated
 */
public interface ConditionGroup extends GroupRelacional {
	/**
	 * Returns the value of the '<em><b>Condition Group</b></em>' attribute.
	 * The default value is <code>"ConditionGroup"</code>.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Condition Group</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Condition Group</em>' attribute.
	 * @see dsml.DsmlPackage#getConditionGroup_ConditionGroup()
	 * @model default="ConditionGroup" changeable="false"
	 * @generated
	 */
	String getConditionGroup();

	/**
	 * Returns the value of the '<em><b>Operation Types</b></em>' containment reference list.
	 * The list contents are of type {@link dsml.Query}.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Operation Types</em>' containment reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Operation Types</em>' containment reference list.
	 * @see dsml.DsmlPackage#getConditionGroup_OperationTypes()
	 * @model containment="true"
	 *        annotation="gmf.compartment layout='free' collapsible='true'"
	 * @generated
	 */
	EList<Query> getOperationTypes();

	/**
	 * Returns the value of the '<em><b>Source</b></em>' reference list.
	 * The list contents are of type {@link dsml.LogicalConnector}.
	 * It is bidirectional and its opposite is '{@link dsml.LogicalConnector#getSource <em>Source</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Source</em>' reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Source</em>' reference list.
	 * @see dsml.DsmlPackage#getConditionGroup_Source()
	 * @see dsml.LogicalConnector#getSource
	 * @model opposite="source"
	 * @generated
	 */
	EList<LogicalConnector> getSource();

	/**
	 * Returns the value of the '<em><b>Target</b></em>' reference list.
	 * The list contents are of type {@link dsml.LogicalConnector}.
	 * It is bidirectional and its opposite is '{@link dsml.LogicalConnector#getTarget <em>Target</em>}'.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Target</em>' reference list isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Target</em>' reference list.
	 * @see dsml.DsmlPackage#getConditionGroup_Target()
	 * @see dsml.LogicalConnector#getTarget
	 * @model opposite="target"
	 * @generated
	 */
	EList<LogicalConnector> getTarget();

} // ConditionGroup
