/*
 * 
 */
package dsml.diagram.providers.assistants;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.emf.type.core.IElementType;

import dsml.diagram.edit.parts.EventEditPart;
import dsml.diagram.edit.parts.EventPatternEditPart;
import dsml.diagram.edit.parts.RuleEditPart;
import dsml.diagram.edit.parts.WindowEditPart;
import dsml.diagram.providers.DsmlElementTypes;
import dsml.diagram.providers.DsmlModelingAssistantProvider;

/**
 * @generated
 */
public class DsmlModelingAssistantProviderOfEventPatternEditPart extends
		DsmlModelingAssistantProvider {

	/**
	 * @generated
	 */
	@Override
	public List<IElementType> getRelTypesOnSource(IAdaptable source) {
		IGraphicalEditPart sourceEditPart = (IGraphicalEditPart) source
				.getAdapter(IGraphicalEditPart.class);
		return doGetRelTypesOnSource((EventPatternEditPart) sourceEditPart);
	}

	/**
	 * @generated
	 */
	public List<IElementType> doGetRelTypesOnSource(EventPatternEditPart source) {
		List<IElementType> types = new ArrayList<IElementType>(1);
		types.add(DsmlElementTypes.Link_4001);
		return types;
	}

	/**
	 * @generated
	 */
	@Override
	public List<IElementType> getRelTypesOnSourceAndTarget(IAdaptable source,
			IAdaptable target) {
		IGraphicalEditPart sourceEditPart = (IGraphicalEditPart) source
				.getAdapter(IGraphicalEditPart.class);
		IGraphicalEditPart targetEditPart = (IGraphicalEditPart) target
				.getAdapter(IGraphicalEditPart.class);
		return doGetRelTypesOnSourceAndTarget(
				(EventPatternEditPart) sourceEditPart, targetEditPart);
	}

	/**
	 * @generated
	 */
	public List<IElementType> doGetRelTypesOnSourceAndTarget(
			EventPatternEditPart source, IGraphicalEditPart targetEditPart) {
		List<IElementType> types = new LinkedList<IElementType>();
		if (targetEditPart instanceof RuleEditPart) {
			types.add(DsmlElementTypes.Link_4001);
		}
		if (targetEditPart instanceof EventPatternEditPart) {
			types.add(DsmlElementTypes.Link_4001);
		}
		if (targetEditPart instanceof WindowEditPart) {
			types.add(DsmlElementTypes.Link_4001);
		}
		if (targetEditPart instanceof EventEditPart) {
			types.add(DsmlElementTypes.Link_4001);
		}
		return types;
	}

	/**
	 * @generated
	 */
	@Override
	public List<IElementType> getTypesForTarget(IAdaptable source,
			IElementType relationshipType) {
		IGraphicalEditPart sourceEditPart = (IGraphicalEditPart) source
				.getAdapter(IGraphicalEditPart.class);
		return doGetTypesForTarget((EventPatternEditPart) sourceEditPart,
				relationshipType);
	}

	/**
	 * @generated
	 */
	public List<IElementType> doGetTypesForTarget(EventPatternEditPart source,
			IElementType relationshipType) {
		List<IElementType> types = new ArrayList<IElementType>();
		if (relationshipType == DsmlElementTypes.Link_4001) {
			types.add(DsmlElementTypes.Rule_2013);
			types.add(DsmlElementTypes.EventPattern_2014);
			types.add(DsmlElementTypes.Window_2015);
			types.add(DsmlElementTypes.Event_2016);
		}
		return types;
	}

	/**
	 * @generated
	 */
	@Override
	public List<IElementType> getRelTypesOnTarget(IAdaptable target) {
		IGraphicalEditPart targetEditPart = (IGraphicalEditPart) target
				.getAdapter(IGraphicalEditPart.class);
		return doGetRelTypesOnTarget((EventPatternEditPart) targetEditPart);
	}

	/**
	 * @generated
	 */
	public List<IElementType> doGetRelTypesOnTarget(EventPatternEditPart target) {
		List<IElementType> types = new ArrayList<IElementType>(1);
		types.add(DsmlElementTypes.Link_4001);
		return types;
	}

	/**
	 * @generated
	 */
	@Override
	public List<IElementType> getTypesForSource(IAdaptable target,
			IElementType relationshipType) {
		IGraphicalEditPart targetEditPart = (IGraphicalEditPart) target
				.getAdapter(IGraphicalEditPart.class);
		return doGetTypesForSource((EventPatternEditPart) targetEditPart,
				relationshipType);
	}

	/**
	 * @generated
	 */
	public List<IElementType> doGetTypesForSource(EventPatternEditPart target,
			IElementType relationshipType) {
		List<IElementType> types = new ArrayList<IElementType>();
		if (relationshipType == DsmlElementTypes.Link_4001) {
			types.add(DsmlElementTypes.Rule_2013);
			types.add(DsmlElementTypes.EventPattern_2014);
			types.add(DsmlElementTypes.Window_2015);
			types.add(DsmlElementTypes.Event_2016);
		}
		return types;
	}

}
