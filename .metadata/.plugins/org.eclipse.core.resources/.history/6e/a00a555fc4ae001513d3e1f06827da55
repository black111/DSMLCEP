/*
 * 
 */
package dsml.diagram.providers.assistants;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart;
import org.eclipse.gmf.runtime.emf.type.core.IElementType;

import dsml.diagram.edit.parts.Aggregation2EditPart;
import dsml.diagram.edit.parts.Aggregation3EditPart;
import dsml.diagram.edit.parts.Aggregation4EditPart;
import dsml.diagram.edit.parts.AggregationEditPart;
import dsml.diagram.edit.parts.BringGroupEditPart;
import dsml.diagram.edit.parts.ConditionGroupEditPart;
import dsml.diagram.edit.parts.Not2EditPart;
import dsml.diagram.edit.parts.NotEditPart;
import dsml.diagram.edit.parts.Operator2EditPart;
import dsml.diagram.edit.parts.Operator3EditPart;
import dsml.diagram.edit.parts.Operator4EditPart;
import dsml.diagram.edit.parts.OperatorEditPart;
import dsml.diagram.edit.parts.Order2EditPart;
import dsml.diagram.edit.parts.Order3EditPart;
import dsml.diagram.edit.parts.Order4EditPart;
import dsml.diagram.edit.parts.OrderEditPart;
import dsml.diagram.edit.parts.Target2EditPart;
import dsml.diagram.edit.parts.TargetEditPart;
import dsml.diagram.edit.parts.ValueOperator2EditPart;
import dsml.diagram.edit.parts.ValueOperator3EditPart;
import dsml.diagram.edit.parts.ValueOperator4EditPart;
import dsml.diagram.edit.parts.ValueOperatorEditPart;
import dsml.diagram.providers.DsmlElementTypes;
import dsml.diagram.providers.DsmlModelingAssistantProvider;

/**
 * @generated
 */
public class DsmlModelingAssistantProviderOfOrder4EditPart extends
		DsmlModelingAssistantProvider {

	/**
	 * @generated
	 */
	@Override
	public List<IElementType> getTypesForPopupBar(IAdaptable host) {
		List<IElementType> types = new ArrayList<IElementType>(1);
		types.add(DsmlElementTypes.Limit_3005);
		return types;
	}

	/**
	 * @generated
	 */
	@Override
	public List<IElementType> getRelTypesOnSource(IAdaptable source) {
		IGraphicalEditPart sourceEditPart = (IGraphicalEditPart) source
				.getAdapter(IGraphicalEditPart.class);
		return doGetRelTypesOnSource((Order4EditPart) sourceEditPart);
	}

	/**
	 * @generated
	 */
	public List<IElementType> doGetRelTypesOnSource(Order4EditPart source) {
		List<IElementType> types = new ArrayList<IElementType>(2);
		types.add(DsmlElementTypes.Comparison_4003);
		types.add(DsmlElementTypes.Arithmetic_4004);
		return types;
	}

	/**
	 * @generated
	 */
	@Override
	public List<IElementType> getRelTypesOnSourceAndTarget(IAdaptable source,
			IAdaptable target) {
		IGraphicalEditPart sourceEditPart = (IGraphicalEditPart) source
				.getAdapter(IGraphicalEditPart.class);
		IGraphicalEditPart targetEditPart = (IGraphicalEditPart) target
				.getAdapter(IGraphicalEditPart.class);
		return doGetRelTypesOnSourceAndTarget((Order4EditPart) sourceEditPart,
				targetEditPart);
	}

	/**
	 * @generated
	 */
	public List<IElementType> doGetRelTypesOnSourceAndTarget(
			Order4EditPart source, IGraphicalEditPart targetEditPart) {
		List<IElementType> types = new LinkedList<IElementType>();
		if (targetEditPart instanceof TargetEditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof AggregationEditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof OrderEditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof OperatorEditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof ValueOperatorEditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof Aggregation2EditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof Order2EditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof ConditionGroupEditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof Aggregation3EditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof Order3EditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof Operator2EditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof ValueOperator2EditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof BringGroupEditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof Aggregation4EditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof Order4EditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof Operator3EditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof ValueOperator3EditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof NotEditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof Operator4EditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof ValueOperator4EditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof Target2EditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof Not2EditPart) {
			types.add(DsmlElementTypes.Comparison_4003);
		}
		if (targetEditPart instanceof TargetEditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof AggregationEditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof OrderEditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof OperatorEditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof ValueOperatorEditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof Aggregation2EditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof Order2EditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof ConditionGroupEditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof Aggregation3EditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof Order3EditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof Operator2EditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof ValueOperator2EditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof BringGroupEditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof Aggregation4EditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof Order4EditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof Operator3EditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof ValueOperator3EditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof NotEditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof Operator4EditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof ValueOperator4EditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof Target2EditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		if (targetEditPart instanceof Not2EditPart) {
			types.add(DsmlElementTypes.Arithmetic_4004);
		}
		return types;
	}

	/**
	 * @generated
	 */
	@Override
	public List<IElementType> getTypesForTarget(IAdaptable source,
			IElementType relationshipType) {
		IGraphicalEditPart sourceEditPart = (IGraphicalEditPart) source
				.getAdapter(IGraphicalEditPart.class);
		return doGetTypesForTarget((Order4EditPart) sourceEditPart,
				relationshipType);
	}

	/**
	 * @generated
	 */
	public List<IElementType> doGetTypesForTarget(Order4EditPart source,
			IElementType relationshipType) {
		List<IElementType> types = new ArrayList<IElementType>();
		if (relationshipType == DsmlElementTypes.Comparison_4003) {
			types.add(DsmlElementTypes.Target_3002);
			types.add(DsmlElementTypes.Aggregation_3003);
			types.add(DsmlElementTypes.Order_3004);
			types.add(DsmlElementTypes.Operator_3006);
			types.add(DsmlElementTypes.ValueOperator_3007);
			types.add(DsmlElementTypes.Aggregation_3008);
			types.add(DsmlElementTypes.Order_3009);
			types.add(DsmlElementTypes.ConditionGroup_3010);
			types.add(DsmlElementTypes.Aggregation_3011);
			types.add(DsmlElementTypes.Order_3012);
			types.add(DsmlElementTypes.Operator_3013);
			types.add(DsmlElementTypes.ValueOperator_3014);
			types.add(DsmlElementTypes.BringGroup_3015);
			types.add(DsmlElementTypes.Aggregation_3016);
			types.add(DsmlElementTypes.Order_3017);
			types.add(DsmlElementTypes.Operator_3018);
			types.add(DsmlElementTypes.ValueOperator_3019);
			types.add(DsmlElementTypes.Not_3020);
			types.add(DsmlElementTypes.Operator_3021);
			types.add(DsmlElementTypes.ValueOperator_3022);
			types.add(DsmlElementTypes.Target_3023);
			types.add(DsmlElementTypes.Not_3024);
		} else if (relationshipType == DsmlElementTypes.Arithmetic_4004) {
			types.add(DsmlElementTypes.Target_3002);
			types.add(DsmlElementTypes.Aggregation_3003);
			types.add(DsmlElementTypes.Order_3004);
			types.add(DsmlElementTypes.Operator_3006);
			types.add(DsmlElementTypes.ValueOperator_3007);
			types.add(DsmlElementTypes.Aggregation_3008);
			types.add(DsmlElementTypes.Order_3009);
			types.add(DsmlElementTypes.ConditionGroup_3010);
			types.add(DsmlElementTypes.Aggregation_3011);
			types.add(DsmlElementTypes.Order_3012);
			types.add(DsmlElementTypes.Operator_3013);
			types.add(DsmlElementTypes.ValueOperator_3014);
			types.add(DsmlElementTypes.BringGroup_3015);
			types.add(DsmlElementTypes.Aggregation_3016);
			types.add(DsmlElementTypes.Order_3017);
			types.add(DsmlElementTypes.Operator_3018);
			types.add(DsmlElementTypes.ValueOperator_3019);
			types.add(DsmlElementTypes.Not_3020);
			types.add(DsmlElementTypes.Operator_3021);
			types.add(DsmlElementTypes.ValueOperator_3022);
			types.add(DsmlElementTypes.Target_3023);
			types.add(DsmlElementTypes.Not_3024);
		}
		return types;
	}

	/**
	 * @generated
	 */
	@Override
	public List<IElementType> getRelTypesOnTarget(IAdaptable target) {
		IGraphicalEditPart targetEditPart = (IGraphicalEditPart) target
				.getAdapter(IGraphicalEditPart.class);
		return doGetRelTypesOnTarget((Order4EditPart) targetEditPart);
	}

	/**
	 * @generated
	 */
	public List<IElementType> doGetRelTypesOnTarget(Order4EditPart target) {
		List<IElementType> types = new ArrayList<IElementType>(2);
		types.add(DsmlElementTypes.Comparison_4003);
		types.add(DsmlElementTypes.Arithmetic_4004);
		return types;
	}

	/**
	 * @generated
	 */
	@Override
	public List<IElementType> getTypesForSource(IAdaptable target,
			IElementType relationshipType) {
		IGraphicalEditPart targetEditPart = (IGraphicalEditPart) target
				.getAdapter(IGraphicalEditPart.class);
		return doGetTypesForSource((Order4EditPart) targetEditPart,
				relationshipType);
	}

	/**
	 * @generated
	 */
	public List<IElementType> doGetTypesForSource(Order4EditPart target,
			IElementType relationshipType) {
		List<IElementType> types = new ArrayList<IElementType>();
		if (relationshipType == DsmlElementTypes.Comparison_4003) {
			types.add(DsmlElementTypes.Target_3002);
			types.add(DsmlElementTypes.Aggregation_3003);
			types.add(DsmlElementTypes.Order_3004);
			types.add(DsmlElementTypes.Operator_3006);
			types.add(DsmlElementTypes.ValueOperator_3007);
			types.add(DsmlElementTypes.Aggregation_3008);
			types.add(DsmlElementTypes.Order_3009);
			types.add(DsmlElementTypes.ConditionGroup_3010);
			types.add(DsmlElementTypes.Aggregation_3011);
			types.add(DsmlElementTypes.Order_3012);
			types.add(DsmlElementTypes.Operator_3013);
			types.add(DsmlElementTypes.ValueOperator_3014);
			types.add(DsmlElementTypes.BringGroup_3015);
			types.add(DsmlElementTypes.Aggregation_3016);
			types.add(DsmlElementTypes.Order_3017);
			types.add(DsmlElementTypes.Operator_3018);
			types.add(DsmlElementTypes.ValueOperator_3019);
			types.add(DsmlElementTypes.Not_3020);
			types.add(DsmlElementTypes.Operator_3021);
			types.add(DsmlElementTypes.ValueOperator_3022);
			types.add(DsmlElementTypes.Target_3023);
			types.add(DsmlElementTypes.Not_3024);
		} else if (relationshipType == DsmlElementTypes.Arithmetic_4004) {
			types.add(DsmlElementTypes.Target_3002);
			types.add(DsmlElementTypes.Aggregation_3003);
			types.add(DsmlElementTypes.Order_3004);
			types.add(DsmlElementTypes.Operator_3006);
			types.add(DsmlElementTypes.ValueOperator_3007);
			types.add(DsmlElementTypes.Aggregation_3008);
			types.add(DsmlElementTypes.Order_3009);
			types.add(DsmlElementTypes.ConditionGroup_3010);
			types.add(DsmlElementTypes.Aggregation_3011);
			types.add(DsmlElementTypes.Order_3012);
			types.add(DsmlElementTypes.Operator_3013);
			types.add(DsmlElementTypes.ValueOperator_3014);
			types.add(DsmlElementTypes.BringGroup_3015);
			types.add(DsmlElementTypes.Aggregation_3016);
			types.add(DsmlElementTypes.Order_3017);
			types.add(DsmlElementTypes.Operator_3018);
			types.add(DsmlElementTypes.ValueOperator_3019);
			types.add(DsmlElementTypes.Not_3020);
			types.add(DsmlElementTypes.Operator_3021);
			types.add(DsmlElementTypes.ValueOperator_3022);
			types.add(DsmlElementTypes.Target_3023);
			types.add(DsmlElementTypes.Not_3024);
		}
		return types;
	}

}
